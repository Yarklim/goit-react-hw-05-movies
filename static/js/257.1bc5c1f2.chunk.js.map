{"version":3,"file":"static/js/257.1bc5c1f2.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  font-size: 32px;\n\n  color: #272727;\n\n  padding: 100px 20px 0 20px;\n`;\n\nexport const BtnBack = styled.button`\n  padding: 10px 30px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n\n  font-size: 18px;\n\n  border-radius: 8px;\n  background-color: #602d2d;\n`;\n\nexport const LinkBtn = styled(Link)`\n  text-decoration: none;\n  color: #fff;\n`;\n\nexport const PosterImg = styled.img`\n  width: 298px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n`;\n\nexport const Descr = styled.div`\n  /* width: 500px; */\n\n  padding: 0 20px 0 20px;\n\n  color: #fff;\n\n  background: rgba(95, 8, 8, 0.83);\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  border: 1px solid rgba(95, 8, 8, 0.3);\n`;\n\nexport const DescrTitle = styled.h2`\n  font-size: 44px;\n\n  margin-bottom: 10px;\n`;\n\nexport const Overview = styled.h3`\n  margin: 10px 0 10px 0;\n`;\n\nexport const Text = styled.p`\n  font-size: 24px;\n`;\n\nexport const GenresTitle = styled.h3`\n  margin: 10px 0 10px 0;\n`;\n\nexport const AditionalWrapper = styled.div`\n  text-align: center;\n`;\n\nexport const AditionalTitle = styled.h3`\n  margin: 10px 0 10px 0;\n\n  color: #f1830c;\n`;\n\nexport const LinkWrapper = styled.ul`\n\tdisplay: flex;\n\tjustify-content: center;\n\tgap: 60px;\n`\n\nexport const ActiveNavLink = styled(NavLink)`\n\n  color: #fff;\n\n  &.active {\n    color: #f08e0e;\n\n    text-decoration: underline;\n  }\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMoviesDetails } from 'services/moviesApi';\nimport noImg from '../../assets/no-image.jpg';\nimport {\n  Container,\n  BtnBack,\n  LinkBtn,\n  Wrapper,\n  Descr,\n  PosterImg,\n  DescrTitle,\n  Overview,\n  Text,\n  GenresTitle,\n  AditionalWrapper,\n  AditionalTitle,\n  LinkWrapper,\n  ActiveNavLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState([]);\n\n  const location = useLocation();\n  const goBackBtn = location.state?.from ?? '/';\n  const saveBackBtn = useRef(goBackBtn);\n\n  useEffect(() => {\n    const getDetails = async () => {\n      try {\n        const result = await getMoviesDetails(movieId);\n        setDetails(result.data);\n      } catch (error) {\n        throw new Error('Ooops... I did it again');\n      }\n    };\n    getDetails();\n  }, [movieId]);\n\n  const getYear = new Date(details.release_date).getFullYear();\n\n  return (\n    <Container>\n      <BtnBack type=\"button\">\n        <LinkBtn to={saveBackBtn.current}>Go Back</LinkBtn>\n      </BtnBack>\n      <Wrapper>\n        <PosterImg\n          src={\n            details.poster_path\n              ? `https://image.tmdb.org/t/p/w500${details.poster_path}`\n              : noImg\n          }\n          alt={details.title}\n        />\n        <Descr>\n          <DescrTitle>{`${details.title} (${getYear})`}</DescrTitle>\n          <p>User score: {(details.vote_average * 10).toFixed(0)}%</p>\n          <Overview>Overview</Overview>\n          <Text>{details.overview}</Text>\n          <GenresTitle>Genres</GenresTitle>\n          <Text>{details.genres?.map(el => el.name).join(' ')}</Text>\n\n          <AditionalWrapper>\n            <AditionalTitle>Additional information</AditionalTitle>\n            <LinkWrapper>\n              <ActiveNavLink to={`/movies/${movieId}/cast`} state={goBackBtn}>\n                Cast\n              </ActiveNavLink>\n              <ActiveNavLink\n                to={`/movies/${movieId}/reviews`}\n                state={goBackBtn}\n              >\n                Reviews\n              </ActiveNavLink>\n            </LinkWrapper>\n          </AditionalWrapper>\n        </Descr>\n      </Wrapper>\n\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","// key V3 6d17473ea7c58c1ca2996519868f7e8a\n// https://api.themoviedb.org/3\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6d17473ea7c58c1ca2996519868f7e8a';\n\nexport const getTrending = async () => {\n  const data = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getMoviesQuery = async query => {\n  const data = await axios.get(\n    //   `search/movie?api_key=${API_KEY}&query=${query}`\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesCredits = async id => {\n  const data = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesReviews = async id => {\n  const data = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n"],"names":["Container","styled","BtnBack","LinkBtn","Link","PosterImg","Wrapper","Descr","DescrTitle","Overview","Text","GenresTitle","AditionalWrapper","AditionalTitle","LinkWrapper","ActiveNavLink","NavLink","movieId","useParams","useState","details","setDetails","goBackBtn","useLocation","state","from","saveBackBtn","useRef","useEffect","getDetails","getMoviesDetails","result","data","Error","getYear","Date","release_date","getFullYear","type","to","current","src","poster_path","noImg","alt","title","vote_average","toFixed","overview","genres","map","el","name","join","axios","API_KEY","getTrending","getMoviesQuery","query","id","getMoviesCredits","getMoviesReviews"],"sourceRoot":""}