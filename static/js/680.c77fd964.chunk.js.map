{"version":3,"file":"static/js/680.c77fd964.chunk.js","mappings":"oNAEaA,EAAYC,EAAAA,GAAAA,IAAH,sFAOTC,EAAOD,EAAAA,GAAAA,GAAH,wGAOJE,EAAWF,EAAAA,GAAAA,GAAH,wSAaRG,EAAaH,EAAAA,GAAAA,IAAH,iEAMVI,EAAUJ,EAAAA,GAAAA,IAAH,gLAYPK,EAAYL,EAAAA,GAAAA,GAAH,2G,mBCnCTM,EAAa,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACzC,OACE,SAACV,EAAD,WACE,SAACE,EAAD,UACGM,EAAKG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YACtB,OACE,SAACX,EAAD,WACE,UAAC,KAAD,CAASY,GAAE,UAAKN,GAAL,OAAcI,GAAMG,MAAO,CAAEC,KAAMP,GAA9C,WACE,SAACN,EAAD,WACE,SAACC,EAAD,CACEa,IACEJ,EAAW,yCAC2BA,GAClCK,EAENC,IAAKR,EACLS,MAAO,IACPC,OAAQ,SAGZ,SAAChB,EAAD,UAAYM,QAdDC,EAkBlB,OAIR,C,mICdD,UApBiB,WACf,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMf,GAAWgB,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACKC,EAAAA,EAAAA,MADL,OACVC,EADU,OAEhBL,EAAUK,EAAOtB,KAAKuB,SAFN,2CAAH,qDAIfH,GACD,GAAE,KAGD,UAAC,IAAD,YACE,4CACA,SAAC,IAAD,CAAYpB,KAAMgB,EAAQf,OAAO,UAAUC,SAAUA,MAG1D,C,sECtBYV,E,QAAYC,GAAAA,IAAH,+G,mMCGtB+B,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHJ,EAAW,mCAAG,oGACNG,EAAAA,EAAAA,IAAA,qCAAwCC,IADlC,cACnBzB,EADmB,yBAGlBA,GAHkB,2CAAH,qDAMX0B,EAAc,mCAAG,WAAMC,GAAN,uFACTH,EAAAA,EAAAA,IAAA,+BAEOC,EAFP,iCAEuCE,EAFvC,oDADS,cACtB3B,EADsB,yBAMrBA,GANqB,2CAAH,sDASd4B,EAAgB,mCAAG,WAAMvB,GAAN,uFACXmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,oBAAkCoB,IADvB,cACxBzB,EADwB,yBAEvBA,GAFuB,2CAAH,sDAKhB6B,EAAgB,mCAAG,WAAMxB,GAAN,uFACXmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,4BAA0CoB,IAD/B,cACxBzB,EADwB,yBAEvBA,GAFuB,2CAAH,sDAKhB8B,EAAgB,mCAAG,WAAMzB,GAAN,uFACXmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,4BAA0CoB,IAD/B,cACxBzB,EADwB,yBAEvBA,GAFuB,2CAAH,qD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx","pages/HomePage/HomePage.styled.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 95%;\n\n  margin: 0 auto;\n  padding-top: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const CardItem = styled.li`\n  width: 298px;\n\n  overflow: hidden;\n\n  background: rgba(255, 255, 255, 0.78);\n  border-radius: 10px;\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.57);\n`;\n\nexport const ImgWrapper = styled.div`\n  height: 447px;\n\n  overflow: hidden;\n`;\n\nexport const CardImg = styled.img`\n  width: 100%;\n\n  object-fit: cover;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const CardTitle = styled.h2`\n  font-size: 24px;\n\n  text-align: center;\n\n  padding: 20px;\n\n  color: #000;\n`;\n","import { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  List,\n  CardItem,\n  ImgWrapper,\n  CardImg,\n  CardTitle,\n} from './MoviesList.styled';\nimport noImg from '../../assets/no-image.jpg';\n\nexport const MoviesList = ({ data, pathTo, location }) => {\n  return (\n    <Container>\n      <List>\n        {data.map(({ title, id, poster_path }) => {\n          return (\n            <CardItem key={id}>\n              <NavLink to={`${pathTo}${id}`} state={{ from: location }}>\n                <ImgWrapper>\n                  <CardImg\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                        : noImg\n                    }\n                    alt={title}\n                    width={298}\n                    height={447}\n                  />\n                </ImgWrapper>\n                <CardTitle>{title}</CardTitle>\n              </NavLink>\n            </CardItem>\n          );\n        })}\n      </List>\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pathTo: PropTypes.string.isRequired,\n  location: PropTypes.object,\n};\n","import { getTrending } from 'services/moviesApi';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Container } from './HomePage.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovies = async () => {\n      const result = await getTrending();\n      setMovies(result.data.results);\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <Container>\n      <h1>Trending today</h1>\n      <MoviesList data={movies} pathTo=\"movies/\" location={location} />\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tfont-size: 32px;\n\ttext-align: center;\n\n\tcolor: #e8761f;\n\n\tpadding-top: 110px\n`","// key V3 6d17473ea7c58c1ca2996519868f7e8a\n// https://api.themoviedb.org/3\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6d17473ea7c58c1ca2996519868f7e8a';\n\nexport const getTrending = async () => {\n  const data = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getMoviesQuery = async query => {\n  const data = await axios.get(\n    //   `search/movie?api_key=${API_KEY}&query=${query}`\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesCredits = async id => {\n  const data = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesReviews = async id => {\n  const data = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n"],"names":["Container","styled","List","CardItem","ImgWrapper","CardImg","CardTitle","MoviesList","data","pathTo","location","map","title","id","poster_path","to","state","from","src","noImg","alt","width","height","useState","movies","setMovies","useLocation","useEffect","getMovies","getTrending","result","results","axios","API_KEY","getMoviesQuery","query","getMoviesDetails","getMoviesCredits","getMoviesReviews"],"sourceRoot":""}