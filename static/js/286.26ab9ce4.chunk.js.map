{"version":3,"file":"static/js/286.26ab9ce4.chunk.js","mappings":"sRAEaA,EAAiBC,EAAAA,GAAAA,IAAH,+QAWdC,EAAeD,EAAAA,GAAAA,GAAH,sEAMZE,EAAeF,EAAAA,GAAAA,EAAH,sE,SCsBzB,EApCgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEMC,EAAAA,EAAAA,IAAiBP,GAFvB,OAETQ,EAFS,OAGfJ,EAAWI,EAAOC,KAAKC,SAHR,sDAKT,IAAIC,MAAM,2BALD,yDAAH,qDAQhBL,GACD,GAAE,CAACN,KAGF,SAACJ,EAAD,UACsB,IAAnBO,EAAQS,QACP,sEAEA,wBACGT,EAAQU,KAAI,SAAAC,GACX,OACE,2BACE,UAAChB,EAAD,sBAAuBgB,EAAGC,WAC1B,SAAChB,EAAD,UAAee,EAAGE,YAFXF,EAAGG,GAKf,OAKV,C,mMClCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACNF,EAAAA,EAAAA,IAAA,qCAAwCC,IADlC,cACnBV,EADmB,yBAGlBA,GAHkB,2CAAH,qDAMXY,EAAc,mCAAG,WAAMC,GAAN,uFACTJ,EAAAA,EAAAA,IAAA,+BAEOC,EAFP,iCAEuCG,EAFvC,oDADS,cACtBb,EADsB,yBAMrBA,GANqB,2CAAH,sDASdc,EAAgB,mCAAG,WAAMN,GAAN,uFACXC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,oBAAkCE,IADvB,cACxBV,EADwB,yBAEvBA,GAFuB,2CAAH,sDAKhBe,EAAgB,mCAAG,WAAMP,GAAN,uFACXC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,4BAA0CE,IAD/B,cACxBV,EADwB,yBAEvBA,GAFuB,2CAAH,sDAKhBF,EAAgB,mCAAG,WAAMU,GAAN,uFACXC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,4BAA0CE,IAD/B,cACxBV,EADwB,yBAEvBA,GAFuB,2CAAH,qD","sources":["components/Reviews/Reviews.stytled.jsx","components/Reviews/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsWrapper = styled.div`\n  margin-top: 10px;\n  padding: 15px;\n\n  background: rgba(255, 255, 255, 0.78);\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.57);\n`;\n\nexport const ReviewsTitle = styled.h3`\n\tfont-size: 28px;\n\n\tmargin-bottom: 10px;\n`\n\nexport const ReviewsDescr = styled.p`\n\tfont-size: 20px;\n\n\tmargin-bottom: 15px;\n`","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReviews } from 'services/moviesApi';\nimport { ReviewsWrapper, ReviewsTitle, ReviewsDescr } from './Reviews.stytled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const result = await getMoviesReviews(movieId);\n        setReviews(result.data.results);\n      } catch (error) {\n        throw new Error('Ooops... I did it again');\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <ReviewsWrapper>\n      {reviews.length === 0 ? (\n        <h3>We don't have any reviews for this movie</h3>\n      ) : (\n        <ul>\n          {reviews.map(el => {\n            return (\n              <li key={el.id}>\n                <ReviewsTitle>Author: {el.author}</ReviewsTitle>\n                <ReviewsDescr>{el.content}</ReviewsDescr>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </ReviewsWrapper>\n  );\n};\n\nexport default Reviews;\n","// key V3 6d17473ea7c58c1ca2996519868f7e8a\n// https://api.themoviedb.org/3\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6d17473ea7c58c1ca2996519868f7e8a';\n\nexport const getTrending = async () => {\n  const data = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getMoviesQuery = async query => {\n  const data = await axios.get(\n    //   `search/movie?api_key=${API_KEY}&query=${query}`\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesCredits = async id => {\n  const data = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesReviews = async id => {\n  const data = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n"],"names":["ReviewsWrapper","styled","ReviewsTitle","ReviewsDescr","movieId","useParams","useState","reviews","setReviews","useEffect","getReviews","getMoviesReviews","result","data","results","Error","length","map","el","author","content","id","axios","API_KEY","getTrending","getMoviesQuery","query","getMoviesDetails","getMoviesCredits"],"sourceRoot":""}